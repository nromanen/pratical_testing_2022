--1) Calculate the average freight of all employees who work not with Western region. 

SELECT employee_id, CAST (AVG(freight) as DECIMAL (10,2))
FROM orders
WHERE employee_id  NOT IN
-- all employees who work with Western region 
(SELECT DISTINCT employee_id
FROM employee_territories
INNER JOIN territories ON territories.territory_id = employee_territories.territory_id
INNER JOIN region ON region.region_id = territories.region_id
WHERE region_description = 'Western')
GROUP BY employee_id
;



-- 2) Show first and last names of employees who shipped orders in cities of USA. 

SELECT first_name, last_name
FROM employees
WHERE employee_id IN
-- e_id from orders with ship_country = 'USA'
(
SELECT DISTINCT employee_id
FROM orders
WHERE ship_country = 'USA'
)
;



--3 Show the names of products and their total cost, which were delivered by German suppliers 

SELECT product_name, CAST (sum(products.unit_price*quantity) AS DECIMAL(10,2)), 
CAST(sum(order_details.unit_price*quantity) AS DECIMAL (10,2))
FROM products
join order_details on products.product_id = order_details.product_id
where supplier_id in (SELECT supplier_id from suppliers where country = 'Germany')
GROUP BY product_name;


-- 4 Show first and last names of employees that donâ€™t work with Eastern region. 


SELECT first_name, last_name
FROM employees
where employee_id not in
(
SELECT DISTINCT employee_territories.employee_id
FROM employee_territories
INNER JOIN territories ON territories.territory_id = employee_territories.territory_id
INNER JOIN region ON region.region_id = territories.region_id
WHERE region_description = 'Eastern'
)

;
-- 5 Show the name of customers that prefer to order non-domestic products.

Select *
FROM
(Select Customers.Customer_id as c_id, count(*) as count_no_domestic_orders
From Customers Join Orders
On Customers.Customer_id = Orders.Customer_id
Join Order_details On Order_details.Order_id = Orders.Order_id
Join Products On Products.Product_id = Order_details.product_id
Join Suppliers On Suppliers.Supplier_id = Products.Supplier_id 
Where Suppliers.country <> Customers.country
group by Customers.Customer_id ) T1
FULL JOIN
(Select Customers.Customer_id as c_id, count(*) as count_domestic_orders
From Customers Join Orders
On Customers.Customer_id = Orders.Customer_id
Join Order_details On Order_details.Order_id = Orders.Order_id
Join Products On Products.Product_id = Order_details.product_id
Join Suppliers On Suppliers.Supplier_id = Products.Supplier_id 
Where Suppliers.country = Customers.country
group by Customers.Customer_id ) T2
ON T1.c_id=T2.c_id
WHERE T1.count_no_domestic_orders > T2.count_domestic_orders OR T2.count_domestic_orders IS NULL
Order by T1.c_id;
